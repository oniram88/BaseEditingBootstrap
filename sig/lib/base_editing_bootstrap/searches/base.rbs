module BaseEditingBootstrap::Searches
  class Base
    include ActiveModel::Naming
    include ActiveModel::Conversion

    attr_reader model_klass: ActiveRecord::Base

    attr_reader user: ActiveRecord::Base

    attr_reader params: Hash[(Symbol | String), untyped]

    attr_reader scope: ActiveRecord::Associations::CollectionProxy

    attr_reader sorts: Array[String]

    def initialize: (ActiveRecord::Associations::CollectionProxy scope, ActiveRecord::Base user, ?params: Hash[(Symbol | String), untyped], ?sorts: ::Array[String]) -> void

    def results: () -> untyped

    def ransack_query: () -> Ransack::Search

    def search_fields: () -> Array[Field]

    def search_result_fields: () -> untyped

    #
    # Ritorna se il campo deve essere ordinabile o meno
    def sortable?: (untyped field) -> bool

    def persisted?: () -> false

    def policy: () -> BaseModelPolicy
  end
end
